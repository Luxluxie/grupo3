# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:          # List of stages for jobs, and their order of execution
  - Dev-Administration
  - Clear-Runner

# This job build the Front End image on PRODUCTION

Clear-Runner-DEV:
  stage: Clear-Runner
  when: manual
  script:
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 107491236028.dkr.ecr.us-east-1.amazonaws.com
    - docker system prune -f --all

########################## DEV #################

build-backend-dev:       # This job runs in the build stage, which runs first.
  stage: Dev-Administration
  when: manual
  script:
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 107491236028.dkr.ecr.us-east-1.amazonaws.com
    - cd /home/gitlab-runner/git
    - rm -rf ctpfcs2023
    - git clone https://ti54:Sistema2022@gitlab.com/sistema6/ctpfcs2023.git
    - cd /home/gitlab-runner/git/ctpfcs2023/backend/src/main/resources
    - cat application-dev.properties > application.properties
    - cd /home/gitlab-runner/git/ctpfcs2023/backend
    - docker build -t be-sistema-ctpfcs:dev .
    - docker tag be-sistema-ctpfcs:dev 107491236028.dkr.ecr.us-east-1.amazonaws.com/be-sistema-ctpfcs:dev
    - docker image prune
    #- docker push 107491236028.dkr.ecr.us-east-1.amazonaws.com/be-sistema-ctpfcs:dev


build-frontend-dev:       # This job runs in the build stage, which runs first.
  stage: Dev-Administration
  when: manual
  script:
    - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 107491236028.dkr.ecr.us-east-1.amazonaws.com
    - cd /home/gitlab-runner/git
    - rm -rf ctpfcs2023
    - git clone https://ti54:Sistema2022@gitlab.com/sistema6/ctpfcs2023.git
    - cd /home/gitlab-runner/git/ctpfcs2023/frontend
    - docker build --build-arg env=nonprod -t fe-sistema-ctpfcs:dev .
    - docker tag fe-sistema-ctpfcs:dev 107491236028.dkr.ecr.us-east-1.amazonaws.com/fe-sistema-ctpfcs:dev
    - docker image prune
    #- docker push 107491236028.dkr.ecr.us-east-1.amazonaws.com/fe-sistema-ctpfcs:dev



start-frontend-dev:      # This job runs in the deploy stage.
  stage: Dev-Administration  # It only runs when *both* jobs in the test stage complete successfully.
  when: manual
  script:
    - docker run -d -p 81:81 107491236028.dkr.ecr.us-east-1.amazonaws.com/fe-sistema-ctpfcs:dev


stop-frontend-dev:      # This job runs in the deploy stage.
  stage: Dev-Administration  # It only runs when *both* jobs in the test stage complete successfully.
  when: manual
  script:
    - docker stop $(docker ps -q --filter ancestor=107491236028.dkr.ecr.us-east-1.amazonaws.com/fe-sistema-ctpfcs:dev)


start-backend-dev:      # This job runs in the deploy stage.
  stage: Dev-Administration  # It only runs when *both* jobs in the test stage complete successfully.
  when: manual
  script:
    - docker run -d -p 8081:8081 107491236028.dkr.ecr.us-east-1.amazonaws.com/be-sistema-ctpfcs:dev

stop-backend-dev:      # This job runs in the deploy stage.
  stage: Dev-Administration  # It only runs when *both* jobs in the test stage complete successfully.
  when: manual
  script:
    - docker stop $(docker ps -q --filter ancestor=107491236028.dkr.ecr.us-east-1.amazonaws.com/be-sistema-ctpfcs:dev)

// teste
docker build -t oficina .
docker run -p 8080:8080 oficina